/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUI.java
 *
 * Created on 25-Dec-2010, 3:20:45 PM
 */

package romanaInterfaz;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.Properties;
import javax.swing.JOptionPane;
import jdk.nashorn.internal.objects.NativeString;

public class GUI extends javax.swing.JFrame {
    //Communicator object
    Communicator communicator = null;
    //KeybindingController object
    KeybindingController keybindingController = null;
    char[] vardecode = new char[] {
        '\u0000','\u263A','\u263B','\u2665','\u2666','\u2663','\u2660','\u2022',
        '\u25D8','\u25CB','\u25D9','\u2642','\u2640','\u266A','\u266B','\u263C',
        '\u25BA','\u25C4','\u2195','\u203C','\u00B6','\u00A7','\u25AC','\u21A8',
        '\u2191','\u2193','\u2192','\u2190','\u221F','\u2194','\u25B2','\u25BC',
        '\u0020','\u0021','\u0022','\u0023','\u0024','\u0025','\u0026','\'',
        '\u0028','\u0029','\u002A','\u002B','\u002C','\u002D','\u002E','\u002F',
        '\u0030','\u0031','\u0032','\u0033','\u0034','\u0035','\u0036','\u0037',
        '\u0038','\u0039','\u003A','\u003B','\u003C','\u003D','\u003E','\u003F',
        '\u0040','\u0041','\u0042','\u0043','\u0044','\u0045','\u0046','\u0047',
        '\u0048','\u0049','\u004A','\u004B','\u004C','\u004D','\u004E','\u004F',
        '\u0050','\u0051','\u0052','\u0053','\u0054','\u0055','\u0056','\u0057',
        '\u0058','\u0059','\u005A','\u005B','\\','\u005D','\u005E','\u005F',
        '\u0060','\u0061','\u0062','\u0063','\u0064','\u0065','\u0066','\u0067',
        '\u0068','\u0069','\u006A','\u006B','\u006C','\u006D','\u006E','\u006F',
        '\u0070','\u0071','\u0072','\u0073','\u0074','\u0075','\u0076','\u0077',
        '\u0078','\u0079','\u007A','\u007B','\u007C','\u007D','\u007E','\u2302',
        '\u00C7','\u00FC','\u00E9','\u00E2','\u00E4','\u00E0','\u00E5','\u00E7',
        '\u00EA','\u00EB','\u00E8','\u00EF','\u00EE','\u00EC','\u00C4','\u00C5',
        '\u00C9','\u00E6','\u00C6','\u00F4','\u00F6','\u00F2','\u00FB','\u00F9',
        '\u00FF','\u00D6','\u00DC','\u00A2','\u00A3','\u00A5','\u20A7','\u0192',
        '\u00E1','\u00ED','\u00F3','\u00FA','\u00F1','\u00D1','\u00AA','\u00BA',
        '\u00BF','\u2310','\u00AC','\u00BD','\u00BC','\u00A1','\u00AB','\u00BB',
        '\u2591','\u2592','\u2593','\u2502','\u2524','\u2561','\u2562','\u2556',
        '\u2555','\u2563','\u2551','\u2557','\u255D','\u255C','\u255B','\u2510',
        '\u2514','\u2534','\u252C','\u251C','\u2500','\u253C','\u255E','\u255F',
        '\u255A','\u2554','\u2569','\u2566','\u2560','\u2550','\u256C','\u2567',
        '\u2568','\u2564','\u2565','\u2559','\u2558','\u2552','\u2553','\u256B',
        '\u256A','\u2518','\u250C','\u2588','\u2584','\u258C','\u2590','\u2580',
        '\u03B1','\u00DF','\u0393','\u03C0','\u03A3','\u03C3','\u00B5','\u03C4',
        '\u03A6','\u0398','\u03A9','\u03B4','\u221E','\u03C6','\u03B5','\u2229',
        '\u2261','\u00B1','\u2265','\u2264','\u2320','\u2321','\u00F7','\u2248',
        '\u00B0','\u2219','\u00B7','\u221A','\u207F','\u00B2','\u25A0','\u00A0'
    };
    String trama = "    5069 kg   ";
    //String trama = "       0 kg   ";

    /** Creates new form GUI */
    public GUI() {
        initComponents();
        createObjects();
        communicator.searchForPorts();
        keybindingController.toggleControls();
        keybindingController.bindKeys();
    }

    private void createObjects()
    {
        communicator = new Communicator(this);
        keybindingController = new KeybindingController(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        cboxPorts = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        btnConnect = new javax.swing.JButton();
        btnDisconnect = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        jTxtPeso = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jBtnTomarPeso = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTxtConfigInicio = new javax.swing.JTextField();
        jTxtConfigFin = new javax.swing.JTextField();
        jBtnGuardar = new javax.swing.JButton();
        jBtnLimpiar = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jTxtVelocidad = new javax.swing.JTextField();
        jlblInicio = new javax.swing.JLabel();
        jlblFin = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jlblTrama = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setTitle("Romana Control Panel");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Romana Control Panel");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Seleccione el puerto de comunicaci√≥n");

        btnConnect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/romanaInterfaz/img/connect.png"))); // NOI18N
        btnConnect.setToolTipText("Conectar puerto asocciado");
        btnConnect.setBorder(null);
        btnConnect.setBorderPainted(false);
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        btnDisconnect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/romanaInterfaz/img/disconnect.png"))); // NOI18N
        btnDisconnect.setToolTipText("Desconectar puerto asociado");
        btnDisconnect.setBorder(null);
        btnDisconnect.setBorderPainted(false);
        btnDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisconnectActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Log del puerto conectado");

        txtLog.setEditable(false);
        txtLog.setColumns(20);
        txtLog.setLineWrap(true);
        txtLog.setRows(5);
        txtLog.setFocusable(false);
        jScrollPane2.setViewportView(txtLog);

        jTxtPeso.setEditable(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Peso romana");

        jBtnTomarPeso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/romanaInterfaz/img/weighing.png"))); // NOI18N
        jBtnTomarPeso.setToolTipText("Tomar peso");
        jBtnTomarPeso.setBorder(null);
        jBtnTomarPeso.setBorderPainted(false);
        jBtnTomarPeso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnTomarPesoActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Configurar trama");

        jLabel16.setText("Inicio (Hex. Ascii)");

        jLabel17.setText("Fin (Hex. Ascii)");

        jTxtConfigInicio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtConfigInicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtConfigInicioKeyTyped(evt);
            }
        });

        jTxtConfigFin.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtConfigFin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtConfigFinKeyTyped(evt);
            }
        });

        jBtnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/romanaInterfaz/img/save.png"))); // NOI18N
        jBtnGuardar.setToolTipText("Guardar Configuracion");
        jBtnGuardar.setBorder(null);
        jBtnGuardar.setBorderPainted(false);
        jBtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGuardarActionPerformed(evt);
            }
        });

        jBtnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/romanaInterfaz/img/clean.png"))); // NOI18N
        jBtnLimpiar.setToolTipText("Limpiar Log");
        jBtnLimpiar.setBorder(null);
        jBtnLimpiar.setBorderPainted(false);
        jBtnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLimpiarActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Velocidad de Conexion");

        jTxtVelocidad.setEditable(false);
        jTxtVelocidad.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jlblInicio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblInicio.setText("#Valor");

        jlblFin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblFin.setText("#Valor");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Prueba de la trama");

        jlblTrama.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblTrama.setText("#Valor");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTxtConfigInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                                    .addComponent(jTxtConfigFin))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlblInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jlblFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTxtVelocidad))
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cboxPorts, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnDisconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBtnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTxtPeso)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBtnTomarPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(2, 2, 2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel19))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jlblTrama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(154, 154, 154)
                                .addComponent(jBtnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel13)))
                    .addComponent(jBtnLimpiar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboxPorts, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDisconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jTxtVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jTxtConfigInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblInicio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxtConfigFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(jlblFin))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlblTrama)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTxtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jBtnTomarPeso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        communicator.connect();
        if (communicator.getConnected() == true)
        {
            if (communicator.initIOStream() == true)
            {
                communicator.initListener();
            }
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisconnectActionPerformed
        communicator.disconnect();
        jTxtPeso.setText("");
        communicator.status="N";
        communicator.addValor = "";
        communicator.logValor = "";
        jTxtVelocidad.setText("");
    }//GEN-LAST:event_btnDisconnectActionPerformed

    private void jBtnTomarPesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnTomarPesoActionPerformed
        //  Variables
        File f, f_op;
        FileWriter w, w_op;
        BufferedWriter bw, bw_op;
        PrintWriter wr, wr_op;
        f = new File("ZPESO.txt");
        f_op = new File("ZPESO_OPC.txt");
        String TPeso = "";
        int NPeso;

        //  Procedimiento
        if (communicator.getConnected() == true){
            boolean ok = false;
            jTxtPeso.setText("");
            for (int i = 0; i < 10; i++) {
                if (!communicator.status.equalsIgnoreCase("N") ||
                        (!NativeString.trim(communicator.logValor).isEmpty() && 
                        communicator.logValor.length() == 14)){
                    jTxtPeso.setText(communicator.logValor);
                    ok = true;
                    break;
                }
                i++;
                try {
                    Thread.sleep(1*200);
                } catch (InterruptedException ex) {
                    System.out.println(ex);
                }
            }
            if (!ok)
            //if (ok)
                jTxtPeso.setText("No Tiene Valor");
            else {
                //jTxtPeso.setText(jlblTrama.getText());
                System.out.println(jTxtPeso.getText());
                try{
                    //  Instanciar Variables de manejo de archivo
                    w     = new FileWriter(f);
                    w_op  = new FileWriter(f_op);
                    bw    = new BufferedWriter(w);
                    bw_op = new BufferedWriter(w_op);
                    wr    = new PrintWriter(bw);
                    wr_op = new PrintWriter(bw_op);
                    TPeso = ""; NPeso = -1;
                    
                    //  Guardar peso en archivo
                    wr_op.println(jTxtPeso.getText());
                    TPeso = jTxtPeso.getText().trim();
                    NPeso = TPeso.indexOf("k");
                    System.err.println(NPeso);
                    if (TPeso.length() > 0 && NPeso > 0)
                        TPeso = TPeso.substring(0, NPeso);
                    else
                        TPeso = TPeso.substring(0, TPeso.length()-1);
                    System.out.println(TPeso.trim());
                    wr_op.println(TPeso.trim());
                    wr.println(TPeso.trim());
                    
                    //  Ciclo para generar el resultado en byte y guardarlo en archivo log
                    for (int i = 0; i < jTxtPeso.getText().getBytes().length; i++) {
                        System.out.println(jTxtPeso.getText().getBytes()[i]);
                        wr_op.println(jTxtPeso.getText().getBytes()[i]);
                    }
                    //  Cerrar objetos de manejo de archivos
                    wr.close();
                    wr_op.close();
                    bw.close();
                    bw_op.close();
                } catch(IOException e){
                    System.out.println("No se pudo guardar el archivo");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "No se encuentra Conectado al puerto COM",
                    "Error - Romana Control Panel",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnTomarPesoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        cargarDatos();
        jTxtConfigInicioKeyTyped(null);
    }//GEN-LAST:event_formWindowOpened

    private void jBtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGuardarActionPerformed
        // TODO add your handling code here:
        boolean ok = true;
        if (jTxtConfigInicio.getText().trim().isEmpty() || 
                jTxtConfigFin.getText().trim().isEmpty() ||
                cboxPorts.getSelectedIndex() < 0 || 
                jTxtConfigInicio.getText().trim().
                        equalsIgnoreCase(jTxtConfigFin.getText().trim())) {
            ok = false;
        }
        if (ok){
            guardarDatos();
        } else {
            JOptionPane.showMessageDialog(null,
                    "Debe llenar todos los datos para guardar la configuraci√≥n",
                    "Error - Romana Control Panel",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnGuardarActionPerformed

    private void jBtnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLimpiarActionPerformed
        // TODO add your handling code here:
        this.txtLog.setText("");
    }//GEN-LAST:event_jBtnLimpiarActionPerformed

    private void jTxtConfigInicioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtConfigInicioKeyTyped
        // TODO add your handling code here:
        int intvar = this.jTxtConfigInicio.getText().length();
        if (intvar > 0){
            int i = Integer.parseInt(this.jTxtConfigInicio.getText());
            int y = Integer.parseInt(this.jTxtConfigFin.getText());
            jlblInicio.setText(String.valueOf(vardecode[i]));
            jlblFin.setText(String.valueOf(vardecode[y]));
            jlblTrama.setText(jlblInicio.getText()+trama+jlblFin.getText());
        }
    }//GEN-LAST:event_jTxtConfigInicioKeyTyped

    private void jTxtConfigFinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtConfigFinKeyTyped
        // TODO add your handling code here:
        int intvar = this.jTxtConfigFin.getText().length();
        if (intvar > 0){
            int i = Integer.parseInt(this.jTxtConfigInicio.getText());
            int y = Integer.parseInt(this.jTxtConfigFin.getText());
            jlblInicio.setText(String.valueOf(vardecode[i]));
            jlblFin.setText(String.valueOf(vardecode[y]));
            jlblTrama.setText(jlblInicio.getText()+trama+jlblFin.getText());
        }
    }//GEN-LAST:event_jTxtConfigFinKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnConnect;
    public javax.swing.JButton btnDisconnect;
    public javax.swing.JComboBox cboxPorts;
    private javax.swing.JButton jBtnGuardar;
    private javax.swing.JButton jBtnLimpiar;
    public javax.swing.JButton jBtnTomarPeso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTxtConfigFin;
    private javax.swing.JTextField jTxtConfigInicio;
    public javax.swing.JTextField jTxtPeso;
    public javax.swing.JTextField jTxtVelocidad;
    private javax.swing.JLabel jlblFin;
    private javax.swing.JLabel jlblInicio;
    private javax.swing.JLabel jlblTrama;
    public javax.swing.JTextArea txtLog;
    // End of variables declaration//GEN-END:variables

    private void cargarDatos(){
        Properties propiedades = new Properties();
        InputStream entrada = null;
        try {
            entrada = new FileInputStream(System.getProperty("user.dir").trim()+
                                            "\\appConfig.properties");

            // cargamos el archivo de propiedades
            propiedades.load(entrada);

            // obtenemos las propiedades y las imprimimos
            this.cboxPorts.setSelectedItem(((String)propiedades.
                    getProperty("puerto")).trim());
            this.jTxtConfigInicio.setText(propiedades.getProperty("inicio_cad"));
            this.jTxtConfigFin.setText(propiedades.getProperty("fin_cad"));

        } catch (IOException ex) {
            this.cboxPorts.setSelectedIndex(-1);
            JOptionPane.showMessageDialog(null,
                    "No posee un archivo de configuracion, por favor "+
                    "Llene los campos correspondientes y presione el boton de "
                    + "Guardar",
                    "Error - Romana Control Panel",
                    JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        } finally {
            if (entrada != null) {
                try {
                    entrada.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
    
    private void guardarDatos(){
        Properties propiedades = new Properties();
        OutputStream salida = null;

        try {
            salida = new FileOutputStream("appConfig.properties");

            // asignamos los valores a las propiedades
            propiedades.setProperty("puerto", ((String)this.cboxPorts.
                                        getSelectedItem()).trim());
            propiedades.setProperty("inicio_cad", this.jTxtConfigInicio.
                                        getText().trim());
            propiedades.setProperty("fin_cad", this.jTxtConfigFin.
                                        getText().trim());
            propiedades.setProperty("velocidad", "9600");

            // guardamos el archivo de propiedades en la carpeta de aplicaci√≥n
            propiedades.store(salida, null);
            
            JOptionPane.showMessageDialog(null,
                    "Archivo de configuracion guardado exitosamente",
                    "Mensaje - Romana Control Panel",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException io) {
            io.printStackTrace();
            JOptionPane.showMessageDialog(null,
                    "No se pudo guardar el archivo de configuracion",
                    "Error - Romana Control Panel",
                    JOptionPane.ERROR_MESSAGE);
        } finally {
            if (salida != null) {
                try {
                    salida.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

        }
    }
}
